const fs = require("fs");
const csv = require("csv-parser");
const {
  gcd,
  lcm,
  modInv,
  modPow,
  randBetween,
  prime,
} = require("bigint-crypto-utils");

const L = (x, n) => (x - 1n) / n;

const generatePQ = async (bits) => {
  let p = await prime(bits);
  let q = await prime(bits);

  while (gcd(p * q, (p - 1n) * (q - 1n)) !== 1n) {
    p = await prime(bits);
    q = await prime(bits);
  }
  return { p, q };
};

const generatePublicKey = (p, q) => {
  const n = p * q;
  const g = randBetween(n * n);
  return { n, g };
};

const generatePrivateKey = (p, q, publicKey) => {
  const lambda = lcm(p - 1n, q - 1n);
  const mu = modInv(
    L(modPow(publicKey.g, lambda, publicKey.n * publicKey.n), publicKey.n),
    publicKey.n
  );
  return { lambda, mu };
};

const generateRandomKeys = async (bits) => {
  const { p, q } = await generatePQ(bits);
  const { n, g } = generatePublicKey(p, q);
  const { lambda, mu } = generatePrivateKey(p, q, { n, g });
  return { publicKey: { n, g }, privateKey: { lambda, mu } };
};

const generateRandomR = (n) => {
  let r;
  do {
    r = randBetween(n);
  } while (gcd(r, n) !== 1n);
  return r;
};

const encrypt = (publicKey, message) => {
  const r = generateRandomR(publicKey.n);
  const g_m = modPow(publicKey.g, message, publicKey.n * publicKey.n);
  const r_n = modPow(r, publicKey.n, publicKey.n * publicKey.n);
  return (g_m * r_n) % (publicKey.n * publicKey.n);
};

const decrypt = (publicKey, privateKey, cipherText) => {
  const c_lambda = modPow(
    cipherText,
    privateKey.lambda,
    publicKey.n * publicKey.n
  );
  const L_c_lambda = L(c_lambda, publicKey.n);
  return (L_c_lambda * privateKey.mu) % publicKey.n;
};

const addition = (publicKey, cipherText1, cipherText2) => {
  return (cipherText1 * cipherText2) % (publicKey.n * publicKey.n);
};

const paillier = async () => {
  const { publicKey, privateKey } = await generateRandomKeys(3072);
  const message1 = 20n;
  const cipherText1 = encrypt(publicKey, message1);
  const message2 = 40n;
  const cipherText2 = encrypt(publicKey, message2);
  const added = addition(publicKey, cipherText1, cipherText2);
  // console.log(decrypt(publicKey, privateKey, added));
  console.log(publicKey, privateKey);
};

// paillier();

const encryptDecryptTime = () => {
  // 2048 key
  // const publicKey = {
  //   n: 658863019912745709481322752784720620263560280447775492553522378569592840464183331778030125785562397439540459633139430849099799339995908812966467059204762150661257988719649513864493973680644758475635325064739070597821027453198604689397166965937177825097926627244966685524714984450539952437984269394907718168194277271505100179577485542693067261783895328456561557655438479482063301040711068845151904121462117344877932554883519157875211420260200517206898585770644451403732366386080285550585366562641821409305021000375753645888856784781588983549340530763527652470758551118996484556728023819789202791686785227336693818152221645573168112342978412891296543683425339708533347297648401762892898331979347963179019448996733174978142780965637577140660994315063119056696062384055182944285702856469965374229572230211861134357547715179183852321033660407596634567980535022043092087462265253180723484488089049473835762248212514059279306784584856944545200770667421598815900860481922131362998192176125146093595460372222138462623691910601610374285097227790114843153786744319486342990722978370166940479751460875706446322835535773407343853384106091658016636965529726197979018463349736791318843198290518193300176807274975260440762697085194462512581132996161n,
  //   g: 349976166617507097478136735299924873138749088417774378640617795865460257244313990261438363355136895146783876592746939283935459328389176274855147613662801301408004117318470414907792139334771028784477268485657773993382035629732033528679585851386352897342994230199106739541187759946897187715091666986439138930890908641582462213792083174494597407240297269792562131167023721122607218679666458330575923961496477511194749175367922116047508141585423482195887143114193375918699823021665444582764231681182706246257443623324024013417890538036330295560974314300695315886602749054937692522543332782443813654041754361777099614831659942400152568828666183743792657117892903086602945248123474013361419600224694318942663908991842355105042754871948153964928766728787794024108811433390935367530611400927167816165254030227081050770008175734669850368225263957973061729919168814215388677457486887975436528613387821513587594319865816983994936531559054763334184819941155319685012371845181219557905868385955105508604067478989442077378488128032412487923576130355601282911256455886928918452805842018508871060023383123027211060840692913954251916780709706005295129698911669745593508127656309939189751335487204162534840678389307499527861527342653890024197036894574026060544022359933106283939310530539034832227531995528432880296476123447690517705952654464741233859722530857506288528221701650050462767753621967687626457737314119917331170993940429128219733420241755731206630702548190661010151157627964593165509754862049247184274936635600144917982941070265650441113604768382794869998681610167334211550970431002468398470670813842456040178056337691893168422936740851377561534302555409195135604643631262188048098379837130805826358997530565767647058825597165313322347858582104665681599897463031481211281675856559416734824373721145753448137272565715687267880710544179581739231039609507687248967637328246641006433443827120707569875247106052695260911402797946475602287368961716583891234219661866333301073777436138900007543211084328696292332249590222179604100611281291051524347186139974439885516203250024451509174372666055268345407391982451660554110669462610395233086381217580525660203851298861269931491646089723993282029197973311305909105858807252719159787154807072391163767873733945711174720132459921141933314953647439317212096147005782413686298725790075120804914603342292423670508204859356001130886364931866915863840655096435720047563483158808682939242900694986884770275604634471064138161083570358736272605n,
  // };
  // const privateKey = {
  //   lambda:
  //     164715754978186427370330688196180155065890070111943873138380594642398210116045832944507531446390599359885114908284857712274949834998977203241616764801190537665314497179912378466123493420161189618908831266184767649455256863299651172349291741484294456274481656811241671381178746112634988109496067348726929542048569317876275044894371385673266815445973832114140389413859619870515825260177767211287976030365529336219483138720879789468802855065050129301724646442661112850933091596520071387646341640660455352326255250093938411472214196195397245887335132690881913117689637779749121139182005954947300697921696306834173454538042560091007377865997297840903317758881957237873206292439805383857613857351080470038833941000404635676264786278364868631507563087350943484693349969143892554722754719302176516296348196763970807454103869705068499406022950739022390445885034057979353067386045510943797993185274498672313076609794682277657846671544471248480768393391425700612946798970449522082285991170398301965376804558630904740037214896615871549634887264712665103353182702411497477224167288767856413346633735791514130644151438214287826482133079716757083943775109508790399934318227858368155238215506910810837110769030634781548034806466433860086280104344588n,
  //   mu: 457755377715446365742889723243251589909973179716645784069533222619177474209403013575065175731158748050372371349259672629588903485881122324909075009520711965894213467756640932512005886806454953895143092367835309320395822691671309643739018815481604979971911150863871008247703616096523680008022417176694481305049458757431806306831479677596033319238068218556437146127645221836270169215145227098141949604350586326881156667895230187993609765972513375567262422876434589215580122979014051852670919488415889439850664528288922461168914191670167586027605848688569806334913585308169125759100628420480884475595665789607627271862725710975523274084850393960116722296346233250147331212818698987341933983562061315112326947993377731413179585808696400406570816751337252065694849204164578451750949467939442355971844205995813938948769010535176386183917628339889908504578761734685662242957317260738358083151007001544447895379948730218214322221154761504845131811771987342374744846020913110033344271663447499719394714361330896285856187006056833299962898677588835846411962062507934553574703186110885439395059455447047328069888107578326175271101471061453349447622077076618978864262094331043413133604642005049834796339095001364494776430948705881665789955370347n,
  // };

  // 1024 key
  // const publicKey = {
  //   n: 19324790486434770535906770701037456538676375891781660069078054348163286041066480178797509632985981233590450445984112309982244652403096704596004550244909640722683478237126155927072610200298972647895759357709986869847692237243887062694315977631736988357148362245104620690434756985756159016867704913092659420758633234332473576568702906812567544870499649472810059453175850949259453115622135233291554260893773326124338415263514826721503060777757925669324185741261713480697179721871449027398553485984968017541931313707885247758191218583123225841464097322975057876416990494257065620955797752601326108464184467417192750008021n,
  //   g: 285270022436723711248207969331846359998496772744862481086038702899629368778469494845655115263719684734914862361227730304576077399484797695525596037687598903973956763811687415202924832556962733902905349521389536789699778621126600358873143191628546682602135974437106436512063492652909518122460042535505374183213788737895638889501063501987534578355384438806411684741986961725213667260969259485410872002867580252029175460028914473941206187088661374054789347637309570584748656021111496649599470291538225007129659468157984241016490626159259676737609579514612389657858552520200515038849604492196958483940072101331162591958121059224552677025965935296918760721877536217270272969954897959797613804852885451984826973969276352338120977766802108789158196044356250690399154781314599620350131185432620335130598633202938145791354871042584761258132854413404918803301040777936533891004566776714855689831692081206818594043774248030803810019832712283172695368084329464018723354208359619417042926113654872168795415406763858911066502620438661878847464204093878693856993810136087164619412968474186814440118339470594884252629790952529113238392335333811006155465123626147857630184826168772439844991481432891457321916176265817810809204555249295935726495288562n,
  // };
  // const privateKey = {
  //   lambda:
  //     9662395243217385267953385350518728269338187945890830034539027174081643020533240089398754816492990616795225222992056154991122326201548352298002275122454820361341739118563077963536305100149486323947879678854993434923846118621943531347157988815868494178574181122552310345217378492878079508433852456546329710379175782318045176970082144096714661136884569072368981185871883419958238591484229534604515917132496612151725724738331412691992546651973221866483582302882990411135541114207952385656322147960786807221409159468618825852105441855082889067926113483242606324456591384309811534570423750196067485487298834329380776832422n,
  //   mu: 4450449277677490721874802734224206498482107164312195263104607097131936535210884799169635502369058151882162536454540877613519176375296312982217358973770492268320445986008639340097199479256907744850539497773808880460608962449399396380778909336910051814924833823655070160616577917187125744397753501936942911235086636325755977435424887927160759226584064556513109818822185296085649481526956087796285687275911155884746513637290038348852308548716396979621015720066164612121375944399350321035606105194994985287464854465241681551720877254863059394503204733952156566114578216033203137519560906509759876254858362083206768697991n,
  // };

  // 3072 key
  const publicKey = {
    n: 20169112472630581787425853810310712420187952099295941608022078926921006906343526552274667011836960867401446597221408262168639977410887581713650802839565412955375287604696922823692928041628202988526663978280903045302422062564668147743448982661913733028453337676436428826942947994003466759343224851898456511496198747248420559474761073632253117330376700816017893386326304999304415836311318651418908649580950196648867991250402455107012085333697444368955325804161367939415141087648240060162929973466958496657427690248281937465871458536152798548098553991489263431863223566941177816213100952289869057723209063982599440625664586552118813607601636390597014075059430577710077459180525287698585365674092896905437437234746545086121074268980095275495518155793589022274002684211319536254482994161046969907287586547589836765230798139061018369401402490071494201333355797023452011958971598424276572008592872434462186000853866802532767732005305949966737940185676318532030599527795449857739955856163751831537934517838328871488803434660993499049528769918595160539724852237693819181090613317227265213664378714564851285116489003159474892407445429126725488090981014085467020701895433198930576645270929701723395124764736609746463052665723038916925369119855079709421881780375682881443032342112584994110398456265534897397832840067419925732006544161316899155412347264019714334667405353784749316999730635880408094799022575527304074170488242480916454899920841140683075602074419364734646758833572241021600349909826287676279538599254257606137765136060481913565359105348238658321261259222074801245689586495578302507465359590399729473663894544263135521395951531890706741462879750011792158908705885570639713390154367254294968135185931203150909385691632463643053438265394098197671847191501573973526208382167226671661691324407619735510094121060637915689144238346323800215158588085854271n,
    g: 337904015286741014315704933082001437143224234613859976884171844729950276272524871030285977646341995611947591680726686984801281738499569906372613412168410904435712989667566315792153623896426061147823118916320661379869461480453327952720910517560934219886965675221325091177319605737933107292801156803980038714502703403944907452808911102203735067320579065874416173791729120380170856707835831848339922117278757556849377983258347222269709358423423591895538749230312314199401951462451465137579839928554104750164558513430193671590384940344402076823713470763618986721351993192899049533058684542264090082444005956209922502214020209953556095367133367658846778404326167845522817526245426127015252295360982919195336383392240326664907217708424099946777895896070530037399451493516493271880826341647508027472883865889201385916012012179088291302962954798863781440401301705721067685417793037192574375542947835921383464432258536972156494914671465208853581500703516597078149923027964667203785645414944789878927564844353488095893087847539162715224400906515629122577784809508859068497979786270905622222195948194836858276606329028122456138393026916257510147888703527116714911016130820806976495839028938100655162385382980335198668221259995728525469952024387963085749200306392297084297806418752995387425962727570807851416693460844030546151807105662338480448628942380620845964017412419899765459714374891687905357006103212194690120014549824685178166164924790483900529962664990372319003382995783857675472569091934704242367065657023695741907107954938175247282320981486950205388696200362046703661924491963842369250726388924511701894113588953721575166256047529865054003595213241850714265007206239475058369190646709884735549513825114977327519976346856564718868900987010722787783993685215635109762178972373973410799894834574905708556588825993197519772203090380451729946026709700662071844687269143825800215618971571263004318354268534427876638366239398126666696179779533220994713593847988606370471738710492583108568680813183857503067585696505774147621396116634689929738338833513011801777043713805169755463870272524456700766355280556645264202628562438878653225945247412764040329427928359058208898778837902769011562556909949703584889902349264320472578719356051790619654110088764028244132439453760799655943569487275687346563593295101599713155897980479218884745547288502875557560985090917475887266016301803433228803629286879647948477668031940420007335616485221381582756001789436221304841639538669353735746189729153459264015343938589171453133116422061402588842184193004314914250684152468366956639477220684479752687066509425805173044362950964963558936971597143325681471743119258096757200323352054534825564105643132054348901697396097536833045537473541459561006497088139512141511226558981413541845019766645358790142907145893834172270021866584530212413431366658801375790535688665527924184573500929514167766855600985877735726284696311171252507386683297601587471009841965807421563281688485035739156364582130829785191571496459930383504055043491029873838807942781433744169562251028956600807826450567374656749321399486655302447202248419416739521965704054867045719012812399297787856341568942139857019334612487510628876875314613080176565721339791585406162605315368606776463047435513520185563309260596871912316115428230515876851006900490217083397619111357427847909376902042233337638718079211729508678829992922604440926947544521835255574040487021126746371800741979410943206660316119639124624099188027697435214733101617638382285540879365375214053466976340258236449235018300244400931657097123793338057817687142571718946729646549332148878682010494209271897639239195703423858315388841333943130794286042424348554199547616339051174906247979634113485681681630n,
  };
  const privateKey = {
    lambda:
n,
    mu: 13756485236981463862386259387118829433477960720039981813027027772652425957144313524516604702557021502076327560524340053894921771657614985430284796250098230915698622557305697387693521460227607899637884704860159245824825476087865798902016282878348440269069379351494933796131606289936354709407661365599512606758421765347914418124389166319856760707152751695932238569699221379913376286966676284535472606182822196951836326994990037616004180268508098343247709480436296361677665983702914516508074037085731505033917500614968017292689525304224100742684732304265272487224489717671080626665442736867457441134484464064628064533532529294479059774760547898284352335328226210432163199154981626163666381857520517003205161519027126286133131038642086151881424634731444334165195497332362440227258649374763315874081112920465621733745299964355850464568516702114398814955018188477707541313694151484175805014919039080808704472044908256356849281347754325780246607352930669301887444909937901755217212348163957821231395755488568119316337857733825693996960576814694320633951878674788072361765398415004809952417981107083099964278668487729630360442435129888296826841173550562727476936237572776286132759299414494038606594457617838034043764175134808964885889893162724318785428083822653627374635346376586960872227642758111930755788887214926153847904686443004442663491899225665966558174472985662120517641052647069685554460768256484542076329898930271661449716005885505231018020655717240474558567805097283381176945121713301568724940508528516081261883706357660206998815179779585511888847324572977697063222138418548621205934944809250110508576335648829164571809362350973279269117222713375579937502612262598093312364794418681943904660937838755177042340453331667036617082620201427947754384999982701502806784417133486946297534757492670363804818250866504011190504469521600504756103000435826213n,
  };

  const numRecords = 100;

  const data = [];
  const encData = [];
  const decData = [];

  const time1 = performance.now();

  for (let i = 0; i < numRecords; i++) {
    const amount = Math.floor(Math.random() * (100 - 1 + 1) + 1);
    data.push(amount);
  }

  const time2 = performance.now();

  for (let i = 0; i < numRecords; i++) {
    const message = BigInt(data[i]);
    const ciphertext = encrypt(publicKey, message);
    encData.push(ciphertext);
  }

  const time3 = performance.now();

  for (let i = 0; i < numRecords; i++) {
    const message = decrypt(publicKey, privateKey, encData[i]);
    decData.push(message);
  }

  const time4 = performance.now();

  const generateTime = time2 - time1;

  const encryptTime = time3 - time2;

  const decryptTime = time4 - time3;

  console.log("Generate Time: ", generateTime);
  console.log("Encrypt Time: ", encryptTime);
  console.log("Decrypt Time: ", decryptTime);
};

// encryptDecryptTime();

const populate = () => {
  // 2048 key
  // const publicKey = {
  //   n: 658863019912745709481322752784720620263560280447775492553522378569592840464183331778030125785562397439540459633139430849099799339995908812966467059204762150661257988719649513864493973680644758475635325064739070597821027453198604689397166965937177825097926627244966685524714984450539952437984269394907718168194277271505100179577485542693067261783895328456561557655438479482063301040711068845151904121462117344877932554883519157875211420260200517206898585770644451403732366386080285550585366562641821409305021000375753645888856784781588983549340530763527652470758551118996484556728023819789202791686785227336693818152221645573168112342978412891296543683425339708533347297648401762892898331979347963179019448996733174978142780965637577140660994315063119056696062384055182944285702856469965374229572230211861134357547715179183852321033660407596634567980535022043092087462265253180723484488089049473835762248212514059279306784584856944545200770667421598815900860481922131362998192176125146093595460372222138462623691910601610374285097227790114843153786744319486342990722978370166940479751460875706446322835535773407343853384106091658016636965529726197979018463349736791318843198290518193300176807274975260440762697085194462512581132996161n,
  //   g: 349976166617507097478136735299924873138749088417774378640617795865460257244313990261438363355136895146783876592746939283935459328389176274855147613662801301408004117318470414907792139334771028784477268485657773993382035629732033528679585851386352897342994230199106739541187759946897187715091666986439138930890908641582462213792083174494597407240297269792562131167023721122607218679666458330575923961496477511194749175367922116047508141585423482195887143114193375918699823021665444582764231681182706246257443623324024013417890538036330295560974314300695315886602749054937692522543332782443813654041754361777099614831659942400152568828666183743792657117892903086602945248123474013361419600224694318942663908991842355105042754871948153964928766728787794024108811433390935367530611400927167816165254030227081050770008175734669850368225263957973061729919168814215388677457486887975436528613387821513587594319865816983994936531559054763334184819941155319685012371845181219557905868385955105508604067478989442077378488128032412487923576130355601282911256455886928918452805842018508871060023383123027211060840692913954251916780709706005295129698911669745593508127656309939189751335487204162534840678389307499527861527342653890024197036894574026060544022359933106283939310530539034832227531995528432880296476123447690517705952654464741233859722530857506288528221701650050462767753621967687626457737314119917331170993940429128219733420241755731206630702548190661010151157627964593165509754862049247184274936635600144917982941070265650441113604768382794869998681610167334211550970431002468398470670813842456040178056337691893168422936740851377561534302555409195135604643631262188048098379837130805826358997530565767647058825597165313322347858582104665681599897463031481211281675856559416734824373721145753448137272565715687267880710544179581739231039609507687248967637328246641006433443827120707569875247106052695260911402797946475602287368961716583891234219661866333301073777436138900007543211084328696292332249590222179604100611281291051524347186139974439885516203250024451509174372666055268345407391982451660554110669462610395233086381217580525660203851298861269931491646089723993282029197973311305909105858807252719159787154807072391163767873733945711174720132459921141933314953647439317212096147005782413686298725790075120804914603342292423670508204859356001130886364931866915863840655096435720047563483158808682939242900694986884770275604634471064138161083570358736272605n,
  // };
  // const privateKey = {
  //   lambda:
  //     164715754978186427370330688196180155065890070111943873138380594642398210116045832944507531446390599359885114908284857712274949834998977203241616764801190537665314497179912378466123493420161189618908831266184767649455256863299651172349291741484294456274481656811241671381178746112634988109496067348726929542048569317876275044894371385673266815445973832114140389413859619870515825260177767211287976030365529336219483138720879789468802855065050129301724646442661112850933091596520071387646341640660455352326255250093938411472214196195397245887335132690881913117689637779749121139182005954947300697921696306834173454538042560091007377865997297840903317758881957237873206292439805383857613857351080470038833941000404635676264786278364868631507563087350943484693349969143892554722754719302176516296348196763970807454103869705068499406022950739022390445885034057979353067386045510943797993185274498672313076609794682277657846671544471248480768393391425700612946798970449522082285991170398301965376804558630904740037214896615871549634887264712665103353182702411497477224167288767856413346633735791514130644151438214287826482133079716757083943775109508790399934318227858368155238215506910810837110769030634781548034806466433860086280104344588n,
  //   mu: 457755377715446365742889723243251589909973179716645784069533222619177474209403013575065175731158748050372371349259672629588903485881122324909075009520711965894213467756640932512005886806454953895143092367835309320395822691671309643739018815481604979971911150863871008247703616096523680008022417176694481305049458757431806306831479677596033319238068218556437146127645221836270169215145227098141949604350586326881156667895230187993609765972513375567262422876434589215580122979014051852670919488415889439850664528288922461168914191670167586027605848688569806334913585308169125759100628420480884475595665789607627271862725710975523274084850393960116722296346233250147331212818698987341933983562061315112326947993377731413179585808696400406570816751337252065694849204164578451750949467939442355971844205995813938948769010535176386183917628339889908504578761734685662242957317260738358083151007001544447895379948730218214322221154761504845131811771987342374744846020913110033344271663447499719394714361330896285856187006056833299962898677588835846411962062507934553574703186110885439395059455447047328069888107578326175271101471061453349447622077076618978864262094331043413133604642005049834796339095001364494776430948705881665789955370347n,
  // };

  // 1024 key
  // const publicKey = {
  //   n: 19324790486434770535906770701037456538676375891781660069078054348163286041066480178797509632985981233590450445984112309982244652403096704596004550244909640722683478237126155927072610200298972647895759357709986869847692237243887062694315977631736988357148362245104620690434756985756159016867704913092659420758633234332473576568702906812567544870499649472810059453175850949259453115622135233291554260893773326124338415263514826721503060777757925669324185741261713480697179721871449027398553485984968017541931313707885247758191218583123225841464097322975057876416990494257065620955797752601326108464184467417192750008021n,
  //   g: 285270022436723711248207969331846359998496772744862481086038702899629368778469494845655115263719684734914862361227730304576077399484797695525596037687598903973956763811687415202924832556962733902905349521389536789699778621126600358873143191628546682602135974437106436512063492652909518122460042535505374183213788737895638889501063501987534578355384438806411684741986961725213667260969259485410872002867580252029175460028914473941206187088661374054789347637309570584748656021111496649599470291538225007129659468157984241016490626159259676737609579514612389657858552520200515038849604492196958483940072101331162591958121059224552677025965935296918760721877536217270272969954897959797613804852885451984826973969276352338120977766802108789158196044356250690399154781314599620350131185432620335130598633202938145791354871042584761258132854413404918803301040777936533891004566776714855689831692081206818594043774248030803810019832712283172695368084329464018723354208359619417042926113654872168795415406763858911066502620438661878847464204093878693856993810136087164619412968474186814440118339470594884252629790952529113238392335333811006155465123626147857630184826168772439844991481432891457321916176265817810809204555249295935726495288562n,
  // };
  // const privateKey = {
  //   lambda:
  //     9662395243217385267953385350518728269338187945890830034539027174081643020533240089398754816492990616795225222992056154991122326201548352298002275122454820361341739118563077963536305100149486323947879678854993434923846118621943531347157988815868494178574181122552310345217378492878079508433852456546329710379175782318045176970082144096714661136884569072368981185871883419958238591484229534604515917132496612151725724738331412691992546651973221866483582302882990411135541114207952385656322147960786807221409159468618825852105441855082889067926113483242606324456591384309811534570423750196067485487298834329380776832422n,
  //   mu: 4450449277677490721874802734224206498482107164312195263104607097131936535210884799169635502369058151882162536454540877613519176375296312982217358973770492268320445986008639340097199479256907744850539497773808880460608962449399396380778909336910051814924833823655070160616577917187125744397753501936942911235086636325755977435424887927160759226584064556513109818822185296085649481526956087796285687275911155884746513637290038348852308548716396979621015720066164612121375944399350321035606105194994985287464854465241681551720877254863059394503204733952156566114578216033203137519560906509759876254858362083206768697991n,
  // };

  // 3072 key
  const publicKey = {
    n: 20169112472630581787425853810310712420187952099295941608022078926921006906343526552274667011836960867401446597221408262168639977410887581713650802839565412955375287604696922823692928041628202988526663978280903045302422062564668147743448982661913733028453337676436428826942947994003466759343224851898456511496198747248420559474761073632253117330376700816017893386326304999304415836311318651418908649580950196648867991250402455107012085333697444368955325804161367939415141087648240060162929973466958496657427690248281937465871458536152798548098553991489263431863223566941177816213100952289869057723209063982599440625664586552118813607601636390597014075059430577710077459180525287698585365674092896905437437234746545086121074268980095275495518155793589022274002684211319536254482994161046969907287586547589836765230798139061018369401402490071494201333355797023452011958971598424276572008592872434462186000853866802532767732005305949966737940185676318532030599527795449857739955856163751831537934517838328871488803434660993499049528769918595160539724852237693819181090613317227265213664378714564851285116489003159474892407445429126725488090981014085467020701895433198930576645270929701723395124764736609746463052665723038916925369119855079709421881780375682881443032342112584994110398456265534897397832840067419925732006544161316899155412347264019714334667405353784749316999730635880408094799022575527304074170488242480916454899920841140683075602074419364734646758833572241021600349909826287676279538599254257606137765136060481913565359105348238658321261259222074801245689586495578302507465359590399729473663894544263135521395951531890706741462879750011792158908705885570639713390154367254294968135185931203150909385691632463643053438265394098197671847191501573973526208382167226671661691324407619735510094121060637915689144238346323800215158588085854271n,
    g: 337904015286741014315704933082001437143224234613859976884171844729950276272524871030285977646341995611947591680726686984801281738499569906372613412168410904435712989667566315792153623896426061147823118916320661379869461480453327952720910517560934219886965675221325091177319605737933107292801156803980038714502703403944907452808911102203735067320579065874416173791729120380170856707835831848339922117278757556849377983258347222269709358423423591895538749230312314199401951462451465137579839928554104750164558513430193671590384940344402076823713470763618986721351993192899049533058684542264090082444005956209922502214020209953556095367133367658846778404326167845522817526245426127015252295360982919195336383392240326664907217708424099946777895896070530037399451493516493271880826341647508027472883865889201385916012012179088291302962954798863781440401301705721067685417793037192574375542947835921383464432258536972156494914671465208853581500703516597078149923027964667203785645414944789878927564844353488095893087847539162715224400906515629122577784809508859068497979786270905622222195948194836858276606329028122456138393026916257510147888703527116714911016130820806976495839028938100655162385382980335198668221259995728525469952024387963085749200306392297084297806418752995387425962727570807851416693460844030546151807105662338480448628942380620845964017412419899765459714374891687905357006103212194690120014549824685178166164924790483900529962664990372319003382995783857675472569091934704242367065657023695741907107954938175247282320981486950205388696200362046703661924491963842369250726388924511701894113588953721575166256047529865054003595213241850714265007206239475058369190646709884735549513825114977327519976346856564718868900987010722787783993685215635109762178972373973410799894834574905708556588825993197519772203090380451729946026709700662071844687269143825800215618971571263004318354268534427876638366239398126666696179779533220994713593847988606370471738710492583108568680813183857503067585696505774147621396116634689929738338833513011801777043713805169755463870272524456700766355280556645264202628562438878653225945247412764040329427928359058208898778837902769011562556909949703584889902349264320472578719356051790619654110088764028244132439453760799655943569487275687346563593295101599713155897980479218884745547288502875557560985090917475887266016301803433228803629286879647948477668031940420007335616485221381582756001789436221304841639538669353735746189729153459264015343938589171453133116422061402588842184193004314914250684152468366956639477220684479752687066509425805173044362950964963558936971597143325681471743119258096757200323352054534825564105643132054348901697396097536833045537473541459561006497088139512141511226558981413541845019766645358790142907145893834172270021866584530212413431366658801375790535688665527924184573500929514167766855600985877735726284696311171252507386683297601587471009841965807421563281688485035739156364582130829785191571496459930383504055043491029873838807942781433744169562251028956600807826450567374656749321399486655302447202248419416739521965704054867045719012812399297787856341568942139857019334612487510628876875314613080176565721339791585406162605315368606776463047435513520185563309260596871912316115428230515876851006900490217083397619111357427847909376902042233337638718079211729508678829992922604440926947544521835255574040487021126746371800741979410943206660316119639124624099188027697435214733101617638382285540879365375214053466976340258236449235018300244400931657097123793338057817687142571718946729646549332148878682010494209271897639239195703423858315388841333943130794286042424348554199547616339051174906247979634113485681681630n,
  };
  const privateKey = {
    lambda:
n,
    mu: 13756485236981463862386259387118829433477960720039981813027027772652425957144313524516604702557021502076327560524340053894921771657614985430284796250098230915698622557305697387693521460227607899637884704860159245824825476087865798902016282878348440269069379351494933796131606289936354709407661365599512606758421765347914418124389166319856760707152751695932238569699221379913376286966676284535472606182822196951836326994990037616004180268508098343247709480436296361677665983702914516508074037085731505033917500614968017292689525304224100742684732304265272487224489717671080626665442736867457441134484464064628064533532529294479059774760547898284352335328226210432163199154981626163666381857520517003205161519027126286133131038642086151881424634731444334165195497332362440227258649374763315874081112920465621733745299964355850464568516702114398814955018188477707541313694151484175805014919039080808704472044908256356849281347754325780246607352930669301887444909937901755217212348163957821231395755488568119316337857733825693996960576814694320633951878674788072361765398415004809952417981107083099964278668487729630360442435129888296826841173550562727476936237572776286132759299414494038606594457617838034043764175134808964885889893162724318785428083822653627374635346376586960872227642758111930755788887214926153847904686443004442663491899225665966558174472985662120517641052647069685554460768256484542076329898930271661449716005885505231018020655717240474558567805097283381176945121713301568724940508528516081261883706357660206998815179779585511888847324572977697063222138418548621205934944809250110508576335648829164571809362350973279269117222713375579937502612262598093312364794418681943904660937838755177042340453331667036617082620201427947754384999982701502806784417133486946297534757492670363804818250866504011190504469521600504756103000435826213n,
  };

  const numRecords = 1000;
  const csvData = [];
  csvData.push(
    "donation_id,campaign_id,donor_id,amount,encrypted_amount,created_at"
  );

  const time1 = performance.now();

  for (let i = 0; i < numRecords; i++) {
    const donation_id = i;
    const campaign_id = 1;
    const donor_id = "aef9f51f-6292-4bae-87db-c1962c2a616a";
    const amount =
      (Math.floor(Math.random() * (2000000 / 1000 - 10000 / 1000 + 1)) +
        10000 / 1000) *
      1000;
    const encrypted_amount = encrypt(publicKey, BigInt(amount));
    const created_at = new Date().toISOString();
    const csvRow = `${donation_id},${campaign_id},${donor_id},${amount},${encrypted_amount},${created_at}`;
    csvData.push(csvRow);
  }

  const time2 = performance.now();

  const generateTime = time2 - time1;

  console.log("Generate Time: ", generateTime);

  const csvContent = csvData.join("\n");
  fs.writeFileSync("donations.csv", csvContent, "utf8");
};

// populate();

const readCSV = (filePath) => {
  return new Promise((resolve, reject) => {
    const data = [];
    fs.createReadStream(filePath)
      .pipe(csv())
      .on("data", (row) => data.push(row))
      .on("end", () => resolve(data))
      .on("error", (err) => reject(err));
  });
};

const sum = (data) => {
  // 2048 key
  // const publicKey = {
  //   n: 658863019912745709481322752784720620263560280447775492553522378569592840464183331778030125785562397439540459633139430849099799339995908812966467059204762150661257988719649513864493973680644758475635325064739070597821027453198604689397166965937177825097926627244966685524714984450539952437984269394907718168194277271505100179577485542693067261783895328456561557655438479482063301040711068845151904121462117344877932554883519157875211420260200517206898585770644451403732366386080285550585366562641821409305021000375753645888856784781588983549340530763527652470758551118996484556728023819789202791686785227336693818152221645573168112342978412891296543683425339708533347297648401762892898331979347963179019448996733174978142780965637577140660994315063119056696062384055182944285702856469965374229572230211861134357547715179183852321033660407596634567980535022043092087462265253180723484488089049473835762248212514059279306784584856944545200770667421598815900860481922131362998192176125146093595460372222138462623691910601610374285097227790114843153786744319486342990722978370166940479751460875706446322835535773407343853384106091658016636965529726197979018463349736791318843198290518193300176807274975260440762697085194462512581132996161n,
  //   g: 349976166617507097478136735299924873138749088417774378640617795865460257244313990261438363355136895146783876592746939283935459328389176274855147613662801301408004117318470414907792139334771028784477268485657773993382035629732033528679585851386352897342994230199106739541187759946897187715091666986439138930890908641582462213792083174494597407240297269792562131167023721122607218679666458330575923961496477511194749175367922116047508141585423482195887143114193375918699823021665444582764231681182706246257443623324024013417890538036330295560974314300695315886602749054937692522543332782443813654041754361777099614831659942400152568828666183743792657117892903086602945248123474013361419600224694318942663908991842355105042754871948153964928766728787794024108811433390935367530611400927167816165254030227081050770008175734669850368225263957973061729919168814215388677457486887975436528613387821513587594319865816983994936531559054763334184819941155319685012371845181219557905868385955105508604067478989442077378488128032412487923576130355601282911256455886928918452805842018508871060023383123027211060840692913954251916780709706005295129698911669745593508127656309939189751335487204162534840678389307499527861527342653890024197036894574026060544022359933106283939310530539034832227531995528432880296476123447690517705952654464741233859722530857506288528221701650050462767753621967687626457737314119917331170993940429128219733420241755731206630702548190661010151157627964593165509754862049247184274936635600144917982941070265650441113604768382794869998681610167334211550970431002468398470670813842456040178056337691893168422936740851377561534302555409195135604643631262188048098379837130805826358997530565767647058825597165313322347858582104665681599897463031481211281675856559416734824373721145753448137272565715687267880710544179581739231039609507687248967637328246641006433443827120707569875247106052695260911402797946475602287368961716583891234219661866333301073777436138900007543211084328696292332249590222179604100611281291051524347186139974439885516203250024451509174372666055268345407391982451660554110669462610395233086381217580525660203851298861269931491646089723993282029197973311305909105858807252719159787154807072391163767873733945711174720132459921141933314953647439317212096147005782413686298725790075120804914603342292423670508204859356001130886364931866915863840655096435720047563483158808682939242900694986884770275604634471064138161083570358736272605n,
  // };
  // const privateKey = {
  //   lambda:
  //     164715754978186427370330688196180155065890070111943873138380594642398210116045832944507531446390599359885114908284857712274949834998977203241616764801190537665314497179912378466123493420161189618908831266184767649455256863299651172349291741484294456274481656811241671381178746112634988109496067348726929542048569317876275044894371385673266815445973832114140389413859619870515825260177767211287976030365529336219483138720879789468802855065050129301724646442661112850933091596520071387646341640660455352326255250093938411472214196195397245887335132690881913117689637779749121139182005954947300697921696306834173454538042560091007377865997297840903317758881957237873206292439805383857613857351080470038833941000404635676264786278364868631507563087350943484693349969143892554722754719302176516296348196763970807454103869705068499406022950739022390445885034057979353067386045510943797993185274498672313076609794682277657846671544471248480768393391425700612946798970449522082285991170398301965376804558630904740037214896615871549634887264712665103353182702411497477224167288767856413346633735791514130644151438214287826482133079716757083943775109508790399934318227858368155238215506910810837110769030634781548034806466433860086280104344588n,
  //   mu: 457755377715446365742889723243251589909973179716645784069533222619177474209403013575065175731158748050372371349259672629588903485881122324909075009520711965894213467756640932512005886806454953895143092367835309320395822691671309643739018815481604979971911150863871008247703616096523680008022417176694481305049458757431806306831479677596033319238068218556437146127645221836270169215145227098141949604350586326881156667895230187993609765972513375567262422876434589215580122979014051852670919488415889439850664528288922461168914191670167586027605848688569806334913585308169125759100628420480884475595665789607627271862725710975523274084850393960116722296346233250147331212818698987341933983562061315112326947993377731413179585808696400406570816751337252065694849204164578451750949467939442355971844205995813938948769010535176386183917628339889908504578761734685662242957317260738358083151007001544447895379948730218214322221154761504845131811771987342374744846020913110033344271663447499719394714361330896285856187006056833299962898677588835846411962062507934553574703186110885439395059455447047328069888107578326175271101471061453349447622077076618978864262094331043413133604642005049834796339095001364494776430948705881665789955370347n,
  // };

  // 1024 key
  // const publicKey = {
  //   n: 19324790486434770535906770701037456538676375891781660069078054348163286041066480178797509632985981233590450445984112309982244652403096704596004550244909640722683478237126155927072610200298972647895759357709986869847692237243887062694315977631736988357148362245104620690434756985756159016867704913092659420758633234332473576568702906812567544870499649472810059453175850949259453115622135233291554260893773326124338415263514826721503060777757925669324185741261713480697179721871449027398553485984968017541931313707885247758191218583123225841464097322975057876416990494257065620955797752601326108464184467417192750008021n,
  //   g: 285270022436723711248207969331846359998496772744862481086038702899629368778469494845655115263719684734914862361227730304576077399484797695525596037687598903973956763811687415202924832556962733902905349521389536789699778621126600358873143191628546682602135974437106436512063492652909518122460042535505374183213788737895638889501063501987534578355384438806411684741986961725213667260969259485410872002867580252029175460028914473941206187088661374054789347637309570584748656021111496649599470291538225007129659468157984241016490626159259676737609579514612389657858552520200515038849604492196958483940072101331162591958121059224552677025965935296918760721877536217270272969954897959797613804852885451984826973969276352338120977766802108789158196044356250690399154781314599620350131185432620335130598633202938145791354871042584761258132854413404918803301040777936533891004566776714855689831692081206818594043774248030803810019832712283172695368084329464018723354208359619417042926113654872168795415406763858911066502620438661878847464204093878693856993810136087164619412968474186814440118339470594884252629790952529113238392335333811006155465123626147857630184826168772439844991481432891457321916176265817810809204555249295935726495288562n,
  // };
  // const privateKey = {
  //   lambda:
  //     9662395243217385267953385350518728269338187945890830034539027174081643020533240089398754816492990616795225222992056154991122326201548352298002275122454820361341739118563077963536305100149486323947879678854993434923846118621943531347157988815868494178574181122552310345217378492878079508433852456546329710379175782318045176970082144096714661136884569072368981185871883419958238591484229534604515917132496612151725724738331412691992546651973221866483582302882990411135541114207952385656322147960786807221409159468618825852105441855082889067926113483242606324456591384309811534570423750196067485487298834329380776832422n,
  //   mu: 4450449277677490721874802734224206498482107164312195263104607097131936535210884799169635502369058151882162536454540877613519176375296312982217358973770492268320445986008639340097199479256907744850539497773808880460608962449399396380778909336910051814924833823655070160616577917187125744397753501936942911235086636325755977435424887927160759226584064556513109818822185296085649481526956087796285687275911155884746513637290038348852308548716396979621015720066164612121375944399350321035606105194994985287464854465241681551720877254863059394503204733952156566114578216033203137519560906509759876254858362083206768697991n,
  // };

  // 3072 key
  const publicKey = {
    n: 20169112472630581787425853810310712420187952099295941608022078926921006906343526552274667011836960867401446597221408262168639977410887581713650802839565412955375287604696922823692928041628202988526663978280903045302422062564668147743448982661913733028453337676436428826942947994003466759343224851898456511496198747248420559474761073632253117330376700816017893386326304999304415836311318651418908649580950196648867991250402455107012085333697444368955325804161367939415141087648240060162929973466958496657427690248281937465871458536152798548098553991489263431863223566941177816213100952289869057723209063982599440625664586552118813607601636390597014075059430577710077459180525287698585365674092896905437437234746545086121074268980095275495518155793589022274002684211319536254482994161046969907287586547589836765230798139061018369401402490071494201333355797023452011958971598424276572008592872434462186000853866802532767732005305949966737940185676318532030599527795449857739955856163751831537934517838328871488803434660993499049528769918595160539724852237693819181090613317227265213664378714564851285116489003159474892407445429126725488090981014085467020701895433198930576645270929701723395124764736609746463052665723038916925369119855079709421881780375682881443032342112584994110398456265534897397832840067419925732006544161316899155412347264019714334667405353784749316999730635880408094799022575527304074170488242480916454899920841140683075602074419364734646758833572241021600349909826287676279538599254257606137765136060481913565359105348238658321261259222074801245689586495578302507465359590399729473663894544263135521395951531890706741462879750011792158908705885570639713390154367254294968135185931203150909385691632463643053438265394098197671847191501573973526208382167226671661691324407619735510094121060637915689144238346323800215158588085854271n,
    g: 337904015286741014315704933082001437143224234613859976884171844729950276272524871030285977646341995611947591680726686984801281738499569906372613412168410904435712989667566315792153623896426061147823118916320661379869461480453327952720910517560934219886965675221325091177319605737933107292801156803980038714502703403944907452808911102203735067320579065874416173791729120380170856707835831848339922117278757556849377983258347222269709358423423591895538749230312314199401951462451465137579839928554104750164558513430193671590384940344402076823713470763618986721351993192899049533058684542264090082444005956209922502214020209953556095367133367658846778404326167845522817526245426127015252295360982919195336383392240326664907217708424099946777895896070530037399451493516493271880826341647508027472883865889201385916012012179088291302962954798863781440401301705721067685417793037192574375542947835921383464432258536972156494914671465208853581500703516597078149923027964667203785645414944789878927564844353488095893087847539162715224400906515629122577784809508859068497979786270905622222195948194836858276606329028122456138393026916257510147888703527116714911016130820806976495839028938100655162385382980335198668221259995728525469952024387963085749200306392297084297806418752995387425962727570807851416693460844030546151807105662338480448628942380620845964017412419899765459714374891687905357006103212194690120014549824685178166164924790483900529962664990372319003382995783857675472569091934704242367065657023695741907107954938175247282320981486950205388696200362046703661924491963842369250726388924511701894113588953721575166256047529865054003595213241850714265007206239475058369190646709884735549513825114977327519976346856564718868900987010722787783993685215635109762178972373973410799894834574905708556588825993197519772203090380451729946026709700662071844687269143825800215618971571263004318354268534427876638366239398126666696179779533220994713593847988606370471738710492583108568680813183857503067585696505774147621396116634689929738338833513011801777043713805169755463870272524456700766355280556645264202628562438878653225945247412764040329427928359058208898778837902769011562556909949703584889902349264320472578719356051790619654110088764028244132439453760799655943569487275687346563593295101599713155897980479218884745547288502875557560985090917475887266016301803433228803629286879647948477668031940420007335616485221381582756001789436221304841639538669353735746189729153459264015343938589171453133116422061402588842184193004314914250684152468366956639477220684479752687066509425805173044362950964963558936971597143325681471743119258096757200323352054534825564105643132054348901697396097536833045537473541459561006497088139512141511226558981413541845019766645358790142907145893834172270021866584530212413431366658801375790535688665527924184573500929514167766855600985877735726284696311171252507386683297601587471009841965807421563281688485035739156364582130829785191571496459930383504055043491029873838807942781433744169562251028956600807826450567374656749321399486655302447202248419416739521965704054867045719012812399297787856341568942139857019334612487510628876875314613080176565721339791585406162605315368606776463047435513520185563309260596871912316115428230515876851006900490217083397619111357427847909376902042233337638718079211729508678829992922604440926947544521835255574040487021126746371800741979410943206660316119639124624099188027697435214733101617638382285540879365375214053466976340258236449235018300244400931657097123793338057817687142571718946729646549332148878682010494209271897639239195703423858315388841333943130794286042424348554199547616339051174906247979634113485681681630n,
  };
  const privateKey = {
    lambda:
n,
    mu: 13756485236981463862386259387118829433477960720039981813027027772652425957144313524516604702557021502076327560524340053894921771657614985430284796250098230915698622557305697387693521460227607899637884704860159245824825476087865798902016282878348440269069379351494933796131606289936354709407661365599512606758421765347914418124389166319856760707152751695932238569699221379913376286966676284535472606182822196951836326994990037616004180268508098343247709480436296361677665983702914516508074037085731505033917500614968017292689525304224100742684732304265272487224489717671080626665442736867457441134484464064628064533532529294479059774760547898284352335328226210432163199154981626163666381857520517003205161519027126286133131038642086151881424634731444334165195497332362440227258649374763315874081112920465621733745299964355850464568516702114398814955018188477707541313694151484175805014919039080808704472044908256356849281347754325780246607352930669301887444909937901755217212348163957821231395755488568119316337857733825693996960576814694320633951878674788072361765398415004809952417981107083099964278668487729630360442435129888296826841173550562727476936237572776286132759299414494038606594457617838034043764175134808964885889893162724318785428083822653627374635346376586960872227642758111930755788887214926153847904686443004442663491899225665966558174472985662120517641052647069685554460768256484542076329898930271661449716005885505231018020655717240474558567805097283381176945121713301568724940508528516081261883706357660206998815179779585511888847324572977697063222138418548621205934944809250110508576335648829164571809362350973279269117222713375579937502612262598093312364794418681943904660937838755177042340453331667036617082620201427947754384999982701502806784417133486946297534757492670363804818250866504011190504469521600504756103000435826213n,
  };

  const numRows = 100;

  let encrypted_sum = BigInt(data[0].encrypted_amount);
  let sum = parseInt(data[0].amount);
  for (let i = 1; i < numRows; i++) {
    sum += parseInt(data[i].amount);
    encrypted_sum = addition(
      publicKey,
      encrypted_sum,
      BigInt(data[i].encrypted_amount)
    );
  }
  console.log(decrypt(publicKey, privateKey, encrypted_sum));
  console.log(sum);
  return BigInt(sum) === decrypt(publicKey, privateKey, encrypted_sum);
};

readCSV("donations.csv")
  .then((data) => {
    const time1 = performance.now();
    const sumData = sum(data);
    const time2 = performance.now();
    console.log(sumData);
    console.log("Sum Time: ", time2 - time1);
  })
  .catch((err) => {
    console.error(err);
  });
